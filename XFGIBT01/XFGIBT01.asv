% ---------------------------------------------------------------------
% Book:         XFG
% ---------------------------------------------------------------------
% Quantlet:     XFGIBT01
% ---------------------------------------------------------------------
% Description:  XFGIBT01 Outputs implied binomial trees computed by DK 
%               and BC algorithm of stock prices, transition probabilities 
%               and Arrow-Debreu prices, respectively, with a parabolic
%               implied volatility (see IBTimpliedvola)
% ---------------------------------------------------------------------
% Usage:        IBTblackscholes, IBTdk, IBTbc, IBTimpliedvola, IBTresort,
%               IBTcrr
%----------------------------------------------------------------------
% Inputs:       Price of underlying asset, Interest rate, Time to
%               expiration, Number of steps
% ---------------------------------------------------------------------
% Output:       Implied binomial trees of stock prices, transition
%               probabilities and Arrow-Debreu prices
% ---------------------------------------------------------------------
% Example:      Run the program with following values for Price of
%               underlying asset, Interest rate, Time to expiration and
%               Number of steps, respectively: [100, 0.03, 3, 3]
% ---------------------------------------------------------------------
% Result:       Output is an implied binomial tree for the price process
%               of the underlying, a tree of transition probabilities, a
%               tree of Arrow-Debreu prices computed by DK and BC algorithm.
%
% implied stock tree D&K
%
%         0         0         0  141.1151
%         0         0  122.7905         0
%         0  110.4703         0  111.4391
%  100.0000         0  100.0000         0
%         0   90.5221         0   89.7351
%         0         0   80.5238         0
%         0         0         0   68.1820
%
%
% implied stock tree B&C
%
%         0         0         0  161.7423
%         0         0  136.1104         0
%         0  111.6212         0  120.0030
%  100.0000         0  106.1837         0
%         0   95.1285         0   99.7656
%         0         0   85.4300         0
%         0         0         0   80.3563
%
%
% transition probability tree D&K
%
%         0         0    0.5085
%         0    0.6070         0
%    0.6278         0    0.6133
%         0    0.6549         0
%         0         0    0.6864
%
%
% transition probability tree B&C
%
%         0         0    0.4852
%         0    0.2953         0
%    0.4800         0    0.4769
%         0    0.6069         0
%         0         0    0.3955
%
%
% arrow debreu price tree D&K
%
%         0         0         0    0.1771
%         0         0    0.3589         0
%         0    0.6092         0    0.4461
%    1.0000         0    0.4619         0
%         0    0.3612         0    0.2539
%         0         0    0.1210         0
%         0         0         0    0.0368
%
%
% arrow debreu price tree B&C
%
%         0         0         0    0.0629
%         0         0    0.1335         0
%         0    0.4658         0    0.3517
%    1.0000         0    0.6158         0
%         0    0.5046         0    0.3864
%         0         0    0.1925         0
%         0         0         0    0.1129
% ---------------------------------------------------------------------
% Author:      Wolfgang Haerdle, Jun Zheng, Alena Mysickova 
% ---------------------------------------------------------------------
format short
disp('Please input Price of Underlying Asset s0, Riskless Interest Rate per Year r');
disp('Time to Expiration (Years) t, Number of steps n');
disp('as: [100, 0.03, 5, 5]');
disp(' ') ;
para=input('[s0, r, t, n]=');
while length(para) < 4
  disp('Not enough input arguments. Please input in 1*4 vector form like [100, 0.03, 5, 5]');
  disp(' ') ;
  para=input('[s0, r, t, n]=');
end
s0=para(1);                             % Stock price
r=para(2);                              % Riskless interest rate	
t=para(3);                              % Time to expiration
n=para(4);                              % Number of intervals format short
[St, AD, P, LV] = IBTdk(s0,r,t,n,[]);      % DK algorithm with parabolic implied volatility
[St2, AD2, P2, LV2] = IBTbc(s0,r,t,n,[]);  % BC algorithm with parabolic implied volatility
% resort the matrices    
Stree = IBTresort(St);                  
ADtree = IBTresort(AD);
Ptree = IBTresort(P);
Stree2 = IBTresort(St2);
ADtree2 = IBTresort(AD2);
Ptree2 = IBTresort(P2);
'implied stock tree D&K'
disp(Stree);
'implied stock tree B&C'
disp(Stree2);
'transition probability tree D&K'
disp(Ptree);
'transition probability tree B&C'
disp(Ptree2);
'arrow debreu price tree D&K'
disp(ADtree);
'arrow debreu price tree B&C'
disp(ADtree2);
